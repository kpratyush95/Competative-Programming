/*
Given a non-empty array of integers, every element appears twice except for one. Find that single one.

Note:

Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Example 1:

Input: [2,2,1]
Output: 1
Example 2:

Input: [4,1,2,1,2]
Output: 4

*/

//Remember XOR of 0 and a number is number
//where as XOR of number and the same number is zero

class Solution {
    public int singleNumber(int[] nums) 
    {
     if(nums.length>1)
     {
         int res= 0;
         for(int i=0; i<nums.length; i++)
         {
             res = res ^nums[i]; 
         }
         return res;
     }
     else if(nums.length==1)
     {
         return nums[0];
     }   
     else
     {
         return 0;
     }   
    }
}
