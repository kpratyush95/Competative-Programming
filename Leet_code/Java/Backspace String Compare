/*
Given two strings S and T, return if they are equal when both are typed into empty text editors. # means a backspace character.

Note that after backspacing an empty text, the text will continue empty.

Example 1:

Input: S = "ab#c", T = "ad#c"
Output: true
Explanation: Both S and T become "ac".
Example 2:

Input: S = "ab##", T = "c#d#"
Output: true
Explanation: Both S and T become "".
Example 3:

Input: S = "a##c", T = "#a#c"
Output: true
Explanation: Both S and T become "c".
Example 4:

Input: S = "a#c", T = "b"
Output: false
Explanation: S becomes "c" while T becomes "b".
Note:

1 <= S.length <= 200
1 <= T.length <= 200
S and T only contain lowercase letters and '#' characters.
Follow up:

Can you solve it in O(N) time and O(1) space?
*/

class Solution {
    public boolean backspaceCompare(String S, String T) 
    {
        Stack<Character> st1 = backspaceoperation(S);
        Stack<Character> st2 = backspaceoperation(T);
        return st1.equals(st2);
    }
    
    public Stack<Character> backspaceoperation(String str)
    {
        Stack<Character> stack = new Stack<>();
        for(int i=0; i<str.length(); i++)
        {
            char ch = str.charAt(i);
            if(ch== '#' && !stack.isEmpty())
            {
                stack.pop();
            }
            else if(ch!='#')
            {
                stack.push(ch);
            }
        }
        return stack;
    }
}
