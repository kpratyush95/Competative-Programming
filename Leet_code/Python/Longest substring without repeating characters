"""Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
"""

class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        dic, start,length = {},0,0
        if(len(s) in [0,1]):
            return len(s)
        else:
            for i,ch in enumerate(s):
                if ch in dic:
                    length = max(length, i-start)
                    start = max(start, dic[ch]+1)
                dic[ch]=i;
            return max(length, len(s)-start)
