/*
There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

You may assume nums1 and nums2 cannot be both empty.

Example 1:

nums1 = [1, 3]
nums2 = [2]

The median is 2.0
Example 2:

nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5
*/

double findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size)
{
   int i =0;
   int j =0;
   int c[nums1Size+nums2Size];
   for(int k =0;(i<nums1Size && j<nums2Size)||(k<nums1Size+nums2Size);k++)
   {
      if(i<nums1Size&& j<nums2Size)
       {
        if(nums1[i]<nums2[j])
         {
           c[k] = nums1[i];
           i++;
        }
          else
         {
           c[k] = nums2[j];
           j++;
          }
       }
      else if(i<nums1Size)
      {
        c[k] = nums1[i];
        i++;
        }
      else if(j<nums2Size)
      {
        c[k] = nums2[j];
        j++;
      }
   }
    if((nums1Size+nums2Size)%2==0)
    {
        return ((float)(c[(nums1Size+nums2Size)/2]+c[(nums2Size+nums1Size-1)/2])/2);
    }
    else
    {
        return ((float)(c[(nums1Size+nums2Size)/2]));
    }
}

