/*Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
*/
int lengthOfLongestSubstring(char * s)
{
 if(s)
 { 
  char *visited[128] ={NULL};
  char *walker = NULL;
  char *temp = NULL;
  walker = (s);
  int len=0;
  while(*walker)
  {
    temp = visited[*walker];
    visited[*walker]= walker;
    if(temp >=s)
    {
        if((walker-s)>len)
        {   
            len = walker-s;
        }
        s = temp+1;
    }
     walker++;
  }
  if((walker-s)>len)
  {
      len = walker-s;
  }
  return len; 
 }
  return 0;  
}
